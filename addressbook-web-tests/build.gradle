apply plugin: 'java'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter() {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.3"
    }
}

apply plugin: "io.qameta.allure"

allure {
    version = '2.2.1'
    autoconfigure = true
    aspectjweaver = true
}

dependencies {
    compile 'org.testng:testng:6.14.3'
    compile 'org.seleniumhq.selenium:selenium-java:3.141.59'
    compile 'com.beust:jcommander:1.81'
    compile 'com.thoughtworks.xstream:xstream:1.4.17'
    compile 'com.google.code.gson:gson:2.8.7'
    compile 'org.hamcrest:hamcrest:2.2'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'mysql:mysql-connector-java:8.0.25'
    compile 'org.hibernate:hibernate-core:5.5.0.Final'
}

test {
    useTestNG()
}

task testGroups(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }

    if (project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }

    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

task testContacts(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }

    if (project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }

    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

task testAll(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng.xml'
    }

    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }

    if (project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }

    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}